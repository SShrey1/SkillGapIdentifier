import { TrainingPlan, UserProfile, RoleRequirement } from '../types';

export function generateTrainingPlanPDF(
  trainingPlan: TrainingPlan,
  userProfile: UserProfile,
  targetRole: RoleRequirement
): void {
  // Create a simple HTML document for PDF generation
  const htmlContent = `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="UTF-8">
      <title>Training Plan - ${targetRole.title}</title>
      <style>
        body {
          font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
          line-height: 1.6;
          color: #333;
          max-width: 800px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          text-align: center;
          border-bottom: 3px solid #3b82f6;
          padding-bottom: 20px;
          margin-bottom: 30px;
        }
        .score-section {
          background: #f8fafc;
          padding: 20px;
          border-radius: 10px;
          margin: 20px 0;
          text-align: center;
        }
        .score {
          font-size: 48px;
          font-weight: bold;
          color: ${trainingPlan.readinessScore >= 80 ? '#10b981' : 
                   trainingPlan.readinessScore >= 60 ? '#f59e0b' : '#ef4444'};
        }
        .course-list {
          margin: 20px 0;
        }
        .course-item {
          border: 1px solid #e5e7eb;
          border-radius: 8px;
          padding: 15px;
          margin: 10px 0;
        }
        .priority-high { border-left: 4px solid #ef4444; }
        .priority-medium { border-left: 4px solid #f59e0b; }
        .priority-low { border-left: 4px solid #6b7280; }
        .skill-gaps {
          display: grid;
          grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
          gap: 15px;
          margin: 20px 0;
        }
        .skill-gap {
          border: 1px solid #e5e7eb;
          border-radius: 8px;
          padding: 15px;
        }
      </style>
    </head>
    <body>
      <div class="header">
        <h1>Personalized Training Plan</h1>
        <h2>${targetRole.title}</h2>
        <p>Generated for: ${userProfile.currentRole} (${userProfile.experience} years experience)</p>
      </div>

      <div class="score-section">
        <h2>Role Readiness Score</h2>
        <div class="score">${trainingPlan.readinessScore}%</div>
        <p>Estimated Timeline: <strong>${trainingPlan.timeline}</strong></p>
      </div>

      <h2>Recommended Courses</h2>
      <div class="course-list">
        ${trainingPlan.recommendations.map(course => `
          <div class="course-item priority-${course.priority <= 2 ? 'high' : course.priority <= 4 ? 'medium' : 'low'}">
            <h3>${course.course}</h3>
            <p><strong>Provider:</strong> ${course.provider}</p>
            <p><strong>Duration:</strong> ${course.duration}</p>
            <p><strong>Priority:</strong> ${course.priority <= 2 ? 'High' : course.priority <= 4 ? 'Medium' : 'Low'}</p>
          </div>
        `).join('')}
      </div>

      <h2>Skill Gap Analysis</h2>
      <div class="skill-gaps">
        ${trainingPlan.skillGaps.filter(gap => gap.gap > 0).map(gap => `
          <div class="skill-gap">
            <h4>${gap.skill}</h4>
            <p>Current Level: ${gap.current}/5</p>
            <p>Required Level: ${gap.required}/5</p>
            <p>Gap: ${gap.gap} level(s)</p>
            <p>Priority: <strong>${gap.priority}</strong></p>
          </div>
        `).join('')}
      </div>

      <div style="margin-top: 40px; padding-top: 20px; border-top: 1px solid #e5e7eb; text-align: center; color: #6b7280;">
        <p>Generated by AI Skill Gap Identifier</p>
        <p>Date: ${new Date().toLocaleDateString()}</p>
      </div>
    </body>
    </html>
  `;

  // Create a new window and print
  const printWindow = window.open('', '_blank');
  if (printWindow) {
    printWindow.document.write(htmlContent);
    printWindow.document.close();
    
    // Wait for content to load, then print
    setTimeout(() => {
      printWindow.print();
      printWindow.close();
    }, 500);
  }
}